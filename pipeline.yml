AWSTemplateFormatVersion: 2010-09-09
# https://docs.aws.amazon.com/codepipeline/latest/userguide/reference-pipeline-structure.html
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/continuous-delivery-codepipeline-action-reference.htmlParameters

Parameters:
  RepositoryName:
    Type: String

  BranchName:
    Type: String
    Default: master

  StackName:
    Type: String
    Default: blog-console

  Endpoint:
    Type: String
    Default: console.blog.louisracicot.net

  WebsiteURL:
    Type: String
    Default: website.blog.louisracicot.net

  ApiStack:
    Description: The name of the api stack
    Type: String

Resources:
  PipelineBucket:
    Type: AWS::S3::Bucket
    Properties: {}

  HostingBucket:
    Type: AWS::S3::Bucket
    Properties:
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - Authorization
              - Content-Length
            AllowedMethods:
              - GET
            AllowedOrigins:
              - '*'
            MaxAge: 3000

  SourceRepository:
    Type: AWS::CodeCommit::Repository
    Properties:
      RepositoryName: !Ref RepositoryName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref PipelineBucket
        Type: S3
      Stages:
        - Name: GitCheckout
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeCommit
                Version: 1
              Configuration:
                RepositoryName: !GetAtt SourceRepository.Name
                BranchName: !Ref BranchName
                PollForSourceChanges: false
              OutputArtifacts:
                - Name: AppSource
        - Name: BuildParams
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: AppSource
              OutputArtifacts:
                - Name: AppBuildParams
              Configuration:
                ProjectName: !Ref CodeBuildParams
        - Name: DeployStack
          Actions:
            - Name: DeployHostingAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: CloudFormation
              InputArtifacts:
                - Name: AppBuildParams
                - Name: AppSource
              OutputArtifacts:
                - Name: AppStackParams
              Configuration:
                ActionMode: CREATE_UPDATE
                Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM
                StackName: !Ref StackName
                RoleArn: !GetAtt CloudFormationRole.Arn
                TemplatePath: 'AppSource::template.yml'
                TemplateConfiguration: 'AppBuildParams::template-configuration.json'
                OutputFileName: stack-outputs.json
        - Name: BuildApp
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                - Name: AppSource
                - Name: AppStackParams
              OutputArtifacts:
                - Name: AppBuild
              Configuration:
                ProjectName: !Ref CodeBuild
                PrimarySource: AppSource
        - Name: DeployApp
          Actions:
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: S3
              InputArtifacts:
                - Name: AppBuild
              Configuration:
                BucketName: !Ref HostingBucket
                Extract: true
                CannedACL: public-read

  CodeBuildParams:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuildParams
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: NO_ARTIFACTS
      Source:
        Type: NO_SOURCE
        BuildSpec: >
          version: 0.1

          phases:
            build:
              commands:
                - printf '{"Parameters":{"HostingBucketDomainName":"%s","Endpoint":"%s"}}' $HOSTING_BUCKET_NAME $ENDPOINT > template-configuration.json
          artifacts:
            files:
              - template-configuration.json
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/nodejs:8.11.0"
        EnvironmentVariables:
          - Name: ENDPOINT
            Value: !Ref Endpoint
          - Name: HOSTING_BUCKET_NAME
            Value: !GetAtt HostingBucket.DomainName

  CodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
        Name: AppClient
      Source:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        Image: "aws/codebuild/nodejs:8.11.0"
        EnvironmentVariables:
          - Name: REACT_APP_API_URL
            Value:
              Fn::ImportValue: !Sub "${ApiStack}-ApiUrl"
          - Name: REACT_APP_AWS_USER_POOLS_ID
            Value:
              Fn::ImportValue: !Sub "${ApiStack}-CognitoUserPool"
          - Name: REACT_APP_AUTH_DOMAIN
            Value:
              Fn::ImportValue: !Sub "${ApiStack}-CognitoUserPoolDomain"
          - Name: REACT_APP_AWS_USER_POOLS_WEB_CLIENT_ID
            Value:
              Fn::ImportValue: !Sub "${ApiStack}-CognitoCliAppClient"
          - Name: REACT_APP_AWS_PROJECT_REGION
            Value: !Ref AWS::Region
          - Name: HOSTING_BUCKET_NAME
            Value: !GetAtt HostingBucket.DomainName
          - Name: REACT_APP_AWS_COGNITO_REGION
            Value: !Ref AWS::Region
          - Name: REACT_APP_AUTH_REDIRECT_SIGNIN
            Value: !Join ['/', ['https:/', !Ref Endpoint, 'auth']]
          - Name: REACT_APP_AUTH_REDIRECT_SIGNOUT
            Value: !Join ['/', ['https:/', !Ref Endpoint, 'logout']]
          - Name: REACT_APP_WEBSITE_URL
            Value: !Join ['/', ['https:/', !Ref WebsiteURL]]


  CloudFormationRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          -
            Effect: Allow
            Principal:
              Service: "cloudformation.amazonaws.com"
            Action: sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - cloudfront:CreateCloudFrontOriginAccessIdentity
                  - cloudfront:DeleteCloudFrontOriginAccessIdentity
                  - cloudfront:GetCloudFrontOriginAccessIdentityConfig
                  - cloudfront:GetDistribution
                  - cloudfront:CreateDistribution
                  - cloudfront:DeleteDistribution
                  - cloudfront:UpdateDistribution
                  - cloudfront:TagResource
                Resource: "*"
              - Effect: Allow
                Action:
                  - route53:GetHostedZone
                  - route53:ChangeResourceRecordSets
                  - route53:ListResourceRecordSets
                  - route53:GetChange
                Resource:
                  - "*"

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"

  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: !GetAtt CloudFormationRole.Arn
              - Effect: Allow
                Action:
                  - cloudformation:DescribeStacks
                  - cloudformation:UpdateStack
                  - cloudformation:CreateStack
                Resource: "*"
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt PipelineBucket.Arn
                  - !Join ['', [!GetAtt PipelineBucket.Arn, "/*"]]
              - Effect: Allow
                Action:
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:UploadArchive
                  - codecommit:GetUploadArchiveStatus
                Resource:
                  - !GetAtt SourceRepository.Arn
              - Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt HostingBucket.Arn
                  - !Join ['', [!GetAtt HostingBucket.Arn, '/*']]
              - Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"

  RepositoryUpdateEventRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: cwe-pipeline-execution
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: codepipeline:StartPipelineExecution
                Resource: !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]

  RepositoryUpdateEventRule:
    Type: AWS::Events::Rule
    Properties:
      EventPattern:
        source:
          - aws.codecommit
        detail-type:
          - 'CodeCommit Repository State Change'
        resources:
          - !Join [ '', [ 'arn:aws:codecommit:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref RepositoryName ] ]
        detail:
          event:
            - referenceCreated
            - referenceUpdated
          referenceType:
            - branch
          referenceName:
            - !Ref BranchName
      Targets:
        - Arn:
            !Join [ '', [ 'arn:aws:codepipeline:', !Ref 'AWS::Region', ':', !Ref 'AWS::AccountId', ':', !Ref Pipeline ] ]
          RoleArn: !GetAtt RepositoryUpdateEventRole.Arn
          Id: codepipeline-BlocConsolePipeline

Outputs:
  WebsiteURL:
    Value: !GetAtt HostingBucket.WebsiteURL
    Description: URL for website hosted on S3
  HostingBucketSecureURL:
    Value: !Join ['', ['https://', !GetAtt HostingBucket.DomainName]]
    Description: Name of S3 bucket to hold website content
